# Kindly generated by ChatBotGPT by Open AI
import argparse
import libcamera
import time

# Create the parser
parser = argparse.ArgumentParser(description='Take timelapse photos')

# Add the hours parameter
parser.add_argument('--hours', type=int, default=2, help='Number of hours to run the timelapse')

# Parse the command line arguments
args = parser.parse_args()

camera = libcamera.Camera()
camera.start()

# Set the resolution and framerate of the camera
camera.resolution = (2592, 1944)
camera.framerate = 30

# Set the directory for storing the photos
path = '/path/to/save/photos/'

# Calculate the total number of photos based on hours
total_photos = int(args.hours * 60)

# Take a photo every minute
for i in range(total_photos):
    camera.capture(path + 'photo' + str(i) + '.jpg')
    time.sleep(60)

camera.stop()


# With threading

import libcamera
import blinkt
import time
import sys
from threading import Thread

# Get the number of hours as a script parameter
hours = int(sys.argv[1])

# Set the brightness of the LEDs
blinkt.set_brightness(0.1)

camera = libcamera.Camera()
camera.start()

# Set the resolution and framerate of the camera
camera.resolution = (2592, 1944)
camera.framerate = 30

# Set the directory for storing the photos
path = '/path/to/save/photos/'

# Calculate the total number of photos based on hours
total_photos = int(hours * 60)

def light_led():
    for i in range(total_photos):
        # Light up the first LED while the picture is being captured
        blinkt.set_pixel(0, 255, 0, 0)
        blinkt.show()
        time.sleep(4)
        # Turn off the first LED
        blinkt.set_pixel(0, 0, 0, 0)
        blinkt.show()
        # Wait for 0.5 seconds before taking the next picture
        time.sleep(0.5)

# Take a photo every minute
for i in range(total_photos):
    # start the thread for the leds
    t1 = Thread(target = light_led)
    t1.start()
    
    # Capture the picture
    camera.capture(path + 'photo' + str(i) + '.jpg')

    t1.join()

camera.stop()

